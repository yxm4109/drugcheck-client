apply plugin: 'com.android.application'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 23
    buildToolsVersion "20.0.0"

    defaultConfig {
        applicationId "net.ucopy.drugcheck"
        minSdkVersion 14
        targetSdkVersion 23

        versionCode 1000020
        versionName "1.0.2-RC1"
        String debug = (Boolean.valueOf(getProperty('debug').toString())) ? "Boolean.parseBoolean(\"true\")" : "false"
        buildConfigField 'boolean', 'debug', debug

        testApplicationId "net.ucopy.drugcheck.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    signingConfigs {
        meituanConfig {
            storeFile file("android.keystore")
            storePassword "2012yaokongcanting1031"
            keyAlias "android.keystore"
            keyPassword "2012yaokongcanting1031"
        }
    }

    buildTypes {
        release {
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            // 移除无用的resource文件
            signingConfig signingConfigs.meituanConfig
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
        }

        debug {
            debuggable true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.android.support:appcompat-v7:23.1.0'

    compile 'de.greenrobot:eventbus:2.4.0'
    checkstyle 'com.puppycrawl.tools:checkstyle:6.5'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile project(':zxinglib')
}

check.dependsOn 'findbugs'
task findbugs(type: FindBugs) {
    description 'Run findbugs'
    group 'Source-Review'

    ignoreFailures = true
    effort = "max"
    reportLevel = "medium"
    classes = files("$project.buildDir/intermediates/classes",
            "../zxinglib/build/intermediates/classes",
            "../network/build/intermediates/classes",
            "../app/build/intermediates/classes")
    excludeFilter = file("$rootProject.rootDir/app/config/findbugs/exclude.xml")

    source = fileTree('src/main/java/')
    classpath = files()
    reports {
        xml.enabled = false
        xml.withMessages = true
        html.enabled = !xml.isEnabled()
        xml.destination "$project.buildDir/outputs/findbugs/findbugs-output.xml"
        html.destination "$project.buildDir/outputs/findbugs/findbugs-output.html"
    }
}

check.dependsOn 'checkstyle'
task checkstyle(type: Checkstyle) {
    configProperties.checkstyleConfigDir = new File(buildscript.sourceFile.parentFile, 'config/checkstyle')
    source 'src'
    include '**/*.java'

    exclude '**/gen/**'
    ignoreFailures = true
    classpath = files()
}

